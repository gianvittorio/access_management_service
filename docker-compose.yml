version: '3.0'

services:
#  access_management_service:
#    container_name: 'access_management_service'
#    build:
#      context: .
#      dockerfile: Dockerfile
#    ports:
#      - "8080:8080"
#      - "8081:8081"
#    networks:
#      - "access_management_service_network"
#    volumes:
#      - "access_management_service_volume:/tmp/access_management_service/logs"
  wiremock:
    container_name: 'wiremock'
    build:
      context: ./Wiremock
    ports:
      - "8083:8080"
    networks:
      - "access_management_service_network"
  
  postgres_db:
    container_name: 'postgres_db'
    image: postgres:13.4-alpine
    restart: always
    environment:
      - "POSTGRES_USER=test"
      - "POSTGRES_PASSWORD=test"
      - "POSTGRES_DB=test"
    networks:
      - "access_management_service_network"
    ports:
      - "5432:5432"
    volumes:
      - access_management_service_volume:/var/lib/postgresql/data
#      - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql

  redis:
    image: redis:latest
    command: redis-server
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_volume:/var/lib/redis
      - redis_config_volume:/usr/local/etc/redis/redis.conf

volumes:
  access_management_service_volume:
  redis_volume:
  redis_config_volume:

networks:
  access_management_service_network:
    driver: 'bridge'
